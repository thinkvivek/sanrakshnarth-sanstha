<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Control-M Job Dependency Graph</title>
  <!-- Load Cytoscape.js from CDN -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cytoscape/3.19.0/cytoscape.min.js"></script>
  <style>
    #cy {
      width: 100%;
      height: 600px;
      border: 1px solid lightgray;
    }
    #details {
      width: 100%;
      height: 200px;
      overflow-y: auto;
      border: 1px solid lightgray;
      padding: 10px;
      font-family: Arial, sans-serif;
    }
    body {
      display: flex;
      flex-direction: column;
      gap: 10px;
    }
  </style>
</head>
<body>
  <div id="cy"></div>
  <div id="details">Click a job to see details here...</div>

  <script>
    fetch('job_dependencies.json')
      .then(response => {
        if (!response.ok) {
          throw new Error(`Fetch failed: ${response.status} - ${response.statusText}`);
        }
        return response.json();
      })
      .then(data => {
        console.log('JSON Data Loaded:', data);

        if (!data.nodes || !data.edges) {
          throw new Error('JSON is missing nodes or edges');
        }

        // Prepare Cytoscape elements
        const elements = [
          ...data.nodes.map(node => ({
            group: 'nodes',
            data: {
              id: node.id,
              label: node.JOBNAME || 'Unnamed',
              fullDetails: node
            }
          })),
          ...data.edges.map(edge => ({
            group: 'edges',
            data: {
              source: edge.from,
              target: edge.to
            }
          }))
        ];

        // Initialize Cytoscape
        const cy = cytoscape({
          container: document.getElementById('cy'),
          elements: elements,
          style: [
            {
              selector: 'node',
              style: {
                'background-color': '#666',
                'label': 'data(label)',
                'width': 50,
                'height': 50,
                'text-valign': 'center',
                'color': '#fff',
                'font-size': '14px',
                'text-outline-width': 2,
                'text-outline-color': '#666'
              }
            },
            {
              selector: 'edge',
              style: {
                'width': 3,
                'line-color': '#ccc',
                'target-arrow-color': '#ccc',
                'target-arrow-shape': 'triangle',
                'curve-style': 'bezier'
              }
            }
          ],
          layout: {
            name: 'dagre', // Directed acyclic graph layout
            rankDir: 'TB', // Top to bottom
            nodeSep: 50,
            rankSep: 100
          }
        });

        // Click event for details
        cy.on('tap', 'node', function(evt) {
          const node = evt.target;
          const details = node.data('fullDetails');
          const detailsDiv = document.getElementById('details');
          detailsDiv.innerHTML = `
            <h3>${details.JOBNAME || 'Unnamed'}</h3>
            <p><strong>Description:</strong> ${details.DESCRIPTION || 'N/A'}</p>
            <p><strong>Node ID:</strong> ${details.NODEID || 'N/A'}</p>
            <p><strong>Command Line:</strong> ${details.CMDLINE || 'N/A'}</p>
            <p><strong>Weeks Calendar:</strong> ${details.WEEKSCAL || 'N/A'}</p>
            <p><strong>In Conditions:</strong> ${details.INCOND ? JSON.stringify(details.INCOND, null, 2) : 'None'}</p>
            <p><strong>Out Conditions:</strong> ${details.OUTCOND ? JSON.stringify(details.OUTCOND, null, 2) : 'None'}</p>
          `;
        });

        cy.on('tap', function(evt) {
          if (evt.target === cy) {
            document.getElementById('details').innerHTML = 'Click a job to see details here...';
          }
        });

        console.log('Graph rendered successfully with Cytoscape.js');
      })
      .catch(error => {
        console.error('Error:', error);
        document.getElementById('details').innerHTML = `Error: ${error.message}<br>Check console for details.`;
      });
  </script>
</body>
</html>
